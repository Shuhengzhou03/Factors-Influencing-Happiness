#### Preamble ####
# Purpose: Tests the structure and validity of the simulated happiness dataset.
# Author: Shuheng (Jack) Zhou
# Date: November 26 2024
# Contact: shuhengzhou5@gmail.com
# License: MIT
# Pre-requisites: 
  # - The `tidyverse` package must be installed and loaded
  # - 00-simulate_data.R must have been run
# Any other information needed? None 


# Load necessary packages
library(dplyr)
library(readr)
library(arrow)
library(testthat)


# Load the simulated data
simulated_data <- read_parquet("data/00-simulated_data/predicting_happiness.parquet")

# Begin tests
test_that("Dataset contains exactly 1000 rows", {
  expect_equal(nrow(simulated_data), 1000)
})

test_that("All required columns are present", {
  required_columns <- c("year", "marital", "childs", "age", "degree", "sex", "happy", "satjob", "realrinc", "ballot")
  expect_true(all(required_columns %in% colnames(simulated_data)))
})

test_that("Year column is set to 2016", {
  expect_true(all(simulated_data$year == 2016))
})

test_that("Childs column values are in range", {
  expect_true(all(simulated_data$childs >= 0 & simulated_data$childs <= 5, na.rm = TRUE))
})

test_that("Age column values are in range", {
  expect_true(all(simulated_data$age >= 18 & simulated_data$age <= 80, na.rm = TRUE))
})

test_that("Happy column contains valid values", {
  valid_happy <- c("Very happy", "Pretty happy", "Not too happy")
  expect_true(all(simulated_data$happy %in% valid_happy))
})

test_that("Satjob column contains valid job satisfaction levels", {
  valid_satjob <- c("very satisfied", "moderately satisfied", "a little dissatisfied", "very dissatisfied")
  expect_true(all(simulated_data$satjob %in% valid_satjob))
})

test_that("Realrinc column values are in range", {
  expect_true(all(simulated_data$realrinc >= 1000 & simulated_data$realrinc <= 150000, na.rm = TRUE))
})

test_that("Sex column contains only valid values", {
  valid_sex <- c("Male", "Female")
  expect_true(all(simulated_data$sex %in% valid_sex))
})

test_that("Marital column contains only valid values", {
  valid_marital <- c("Married", "Never married", "Divorced", "Widowed", "Separated")
  expect_true(all(simulated_data$marital %in% valid_marital))
})

test_that("Degree column contains only valid education levels", {
  valid_degree <- c("High school", "Bachelor's", "Graduate", "No degree", "Less than high school", "Associate/junior college")
  expect_true(all(simulated_data$degree %in% valid_degree))
})

test_that("Ballot column contains only valid ballot types", {
  valid_ballot <- c("Ballot a", "Ballot b", "Ballot c")
  expect_true(all(simulated_data$ballot %in% valid_ballot))
})
